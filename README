LazyKQ 1.0

LazyKQはあの「ダァ!シエリイェス!!」だけを使うプログラミング言語です。

Hello, world!

    ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァ!イェダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリダァダァ!シエリススス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェ!
    ダァダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!
    ダァ!イェダァダァ!シエリダァ!イェダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァダァ!シエリスス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!
    ダァ!イェダァダァ!シエリダァ!イェダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァダァ!シエリスス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!
    ダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァダァ!シエリスス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!
    ダァ!イェダァダァ!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリダァダァ!シエリスス!ス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァダァ!シエリダァダァ!シエリススス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!
    シエリダァ!イェシエリイェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!
    シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリダァダァ!シエリススス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァダァ!シエリダァ!
    イェシエリイェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!
    シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!
    シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリスス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァ!イェダァダァダァ!シエリスス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!
    ダァダァダァ!シエリダァダァ!シエリスス!ス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!
    ダァ!イェダァダァ!シエリダァ!イェダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェダァダァダァ!シエリスス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァ!シエリダァダァ!シエリス!ダァ!イェダァダァダァ!シエリスス!ダァダァダァ!シエリスス!
    ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!ダァ!イェダァダァダァ!シエリスス!ダァダァダァ!シエリスス!ダァダァ!シエリダァダァ!シエリダァ!イェシエリイェス!!

コマンド

    kq [options] [filename]
    
    オプション:
        -d ソースコードを標準入力から読み込みます。
        -r 出力をバイト列に変換せずに、式のまま返します。
        
例

    コンパイルにはGHCが必要です。
    $ ghc kq.hs -o kq
    $ ./kq examples/helloworld.kq
    Hello, world!
    
文法

    ダァは関数適用、シエリはS、イェはK、スはIを表します。
    
    「ダァAB」で、AをBに適用します。
    「ス」は引数をそのまま返す関数です。
    「イェ」は引数を２つ取り、最初の引数だけを返す関数です。
    「シエリ」は引数を3つ取り、「3つ目の引数に1つ目の引数を適用したもの」を「３つ目の引数に2つ目の引数を適用したもの」に適用する関数です。
    感嘆符、スペース、改行は無視されます。
    
    関数はカリー化されており、引数はひとつずつ適用されます。そのため、引数を複数取る場合はそれだけダァが必要になります。
    
    ダァスx = x
    ダァダァイェxy = x
    ダァダァダァシエリxyz = ダァ!ダァxzダァyz

入出力

　入力は1バイト単位でチャーチ数のリストに変換されます。入力の終わりはチャーチ数256で表されます。
　結果もチャーチ数のリストとなり、256以上の数が出現するまで標準出力に書き出されます。
　256以上の数が出現した場合、256を引いた値をリターンコードとして終了します。

ファイル
    
    kq.hs LazyKQのインタプリタ。
    
    README このファイル。
    
    examples
    
        echo.kq 入力をそのまま返す。
        
        helloworld.kq Hello, worldを表示。
        
        primes.kq 素数を順に表示。
        
        unlambda.kq Unlambdaの完全なインタプリタ。
